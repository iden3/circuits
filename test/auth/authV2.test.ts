import {describe} from "mocha";

const path = require("path");
const wasm_tester = require("circom_tester").wasm;

// inputs MUST be generated by GO-CIRCUITS library https://github.com/iden3/go-circuits (using corresponding test)
describe("authV2Test.circom:", async function() {

    const tests = [
        {desc: "Ownership true. User state: not-genesis. Auth claims total/signedWith/revoked: 1/1/none", inputs: {genesisID: "19104853439462320209059061537253618984153217267677512271018416655565783041", profileNonce: "0", authClaim: ["301485908906857522017021291028488077057", "0", "4720763745722683616702324599137259461509439547324750011830105416383780791263", "4844030361230692908091131578688419341633213823133966379083981236400104720538", "16547485850637761685", "0", "0", "0"], authClaimIncMtp: ["20705360459443886266589173521200199826970601318029396875976898748762842059297", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], authClaimNonRevMtp: ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], authClaimNonRevMtpAuxHi: "0", authClaimNonRevMtpAuxHv: "0", authClaimNonRevMtpNoAux: "1", challenge: "12345", challengeSignatureR8x: "15829360093371098546177008474519342171461782120259125067189481965541223738777", challengeSignatureR8y: "10840522802382821290541462398953040493080116495308402635486440290351677745960", challengeSignatureS: "1196477404779941775725836688033485533497812196897664950083199167075327114562", claimsTreeRoot: "6984610952247418323757666775772385794275837910148332707634157199038140910110", revTreeRoot: "0", rootsTreeRoot: "0", state: "21113804037250189000799544443714429575956552660749022584991067995298527468524", gistRoot: "8364809448271980031740809272009123642667894182754198753132121401485119560119", gistMtp: ["1243904711429961858774220647610724273798918457991486031567244100767259239747", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], gistMtpAuxHi: "0", gistMtpAuxHv: "0", gistMtpNoAux: "0"}, expOut: {userID: "19104853439462320209059061537253618984153217267677512271018416655565783041", gistRoot: "8364809448271980031740809272009123642667894182754198753132121401485119560119", challenge: "12345"}},
        {desc: "Ownership true. User state: not-genesis. Auth claims total/signedWith/revoked: 1/1/none", inputs: {genesisID: "19104853439462320209059061537253618984153217267677512271018416655565783041", profileNonce: "0", authClaim: ["301485908906857522017021291028488077057", "0", "18843627616807347027405965102907494712213509184168391784663804560181782095821", "21769574296201138406688395494914474950554632404504713590270198507141791084591", "17476719578317212277", "0", "0", "0"], authClaimIncMtp: ["5156125448952672817978035354327403409438120028299513459509442000229340486813", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], authClaimNonRevMtp: ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], authClaimNonRevMtpAuxHi: "16547485850637761685", authClaimNonRevMtpAuxHv: "0", authClaimNonRevMtpNoAux: "0", challenge: "12345", challengeSignatureR8x: "17119525341148708510056742833108899809180137847226842265134929121642912372281", challengeSignatureR8y: "14361124785409490066314019246273984594356444175220864488356627192969301706799", challengeSignatureS: "1437929958210592098523189041037049993330511094749287599959220159702091719018", claimsTreeRoot: "6984610952247418323757666775772385794275837910148332707634157199038140910110", revTreeRoot: "18174590471735654296853614985726184006995378344929215927298747263240370223984", rootsTreeRoot: "0", state: "8208485855530917164632841166865715388068097925891304696810258876668650215564", gistRoot: "13833861824461571369392733173453854274068616278866226173429312140164670575525", gistMtp: ["1243904711429961858774220647610724273798918457991486031567244100767259239747", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], gistMtpAuxHi: "0", gistMtpAuxHv: "0", gistMtpNoAux: "0"}, expOut: {userID: "19104853439462320209059061537253618984153217267677512271018416655565783041", gistRoot: "13833861824461571369392733173453854274068616278866226173429312140164670575525", challenge: "12345"}},
        {desc: "Ownership true. User state: genesis. Auth claims total/signedWith/revoked: 1/1/none", inputs: {genesisID: "19104853439462320209059061537253618984153217267677512271018416655565783041", profileNonce: "0", authClaim: ["301485908906857522017021291028488077057", "0", "4720763745722683616702324599137259461509439547324750011830105416383780791263", "4844030361230692908091131578688419341633213823133966379083981236400104720538", "16547485850637761685", "0", "0", "0"], authClaimIncMtp: ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], authClaimNonRevMtp: ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], authClaimNonRevMtpAuxHi: "0", authClaimNonRevMtpAuxHv: "0", authClaimNonRevMtpNoAux: "1", challenge: "12345", challengeSignatureR8x: "15829360093371098546177008474519342171461782120259125067189481965541223738777", challengeSignatureR8y: "10840522802382821290541462398953040493080116495308402635486440290351677745960", challengeSignatureS: "1196477404779941775725836688033485533497812196897664950083199167075327114562", claimsTreeRoot: "5156125448952672817978035354327403409438120028299513459509442000229340486813", revTreeRoot: "0", rootsTreeRoot: "0", state: "13749793311041076104545663747883540987785640262360452307923674522221753800226", gistRoot: "1243904711429961858774220647610724273798918457991486031567244100767259239747", gistMtp: ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], gistMtpAuxHi: "1", gistMtpAuxHv: "1", gistMtpNoAux: "0"}, expOut: {userID: "19104853439462320209059061537253618984153217267677512271018416655565783041", gistRoot: "1243904711429961858774220647610724273798918457991486031567244100767259239747", challenge: "12345"}},
        {desc: "nonce=10. ProfileID == UserID should be true. Ownership true. User state: genesis. Auth claims total/signedWith/revoked: 1/1/none", inputs: {genesisID: "19104853439462320209059061537253618984153217267677512271018416655565783041", profileNonce: "10", authClaim: ["301485908906857522017021291028488077057", "0", "4720763745722683616702324599137259461509439547324750011830105416383780791263", "4844030361230692908091131578688419341633213823133966379083981236400104720538", "16547485850637761685", "0", "0", "0"], authClaimIncMtp: ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], authClaimNonRevMtp: ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], authClaimNonRevMtpAuxHi: "0", authClaimNonRevMtpAuxHv: "0", authClaimNonRevMtpNoAux: "1", challenge: "12345", challengeSignatureR8x: "15829360093371098546177008474519342171461782120259125067189481965541223738777", challengeSignatureR8y: "10840522802382821290541462398953040493080116495308402635486440290351677745960", challengeSignatureS: "1196477404779941775725836688033485533497812196897664950083199167075327114562", claimsTreeRoot: "5156125448952672817978035354327403409438120028299513459509442000229340486813", revTreeRoot: "0", rootsTreeRoot: "0", state: "13749793311041076104545663747883540987785640262360452307923674522221753800226", gistRoot: "1243904711429961858774220647610724273798918457991486031567244100767259239747", gistMtp: ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], gistMtpAuxHi: "1", gistMtpAuxHv: "1", gistMtpNoAux: "0"}, expOut: {userID: "25488971158629062708211589022720088934000314791497875911489989686829383681", gistRoot: "1243904711429961858774220647610724273798918457991486031567244100767259239747", challenge: "12345"}},
    ];

    let circuit;
    this.timeout(300000)

    before(async () => {
        circuit = await wasm_tester(
            path.join(__dirname, "../circuits", "authV2Test.circom"),
            {
                output: path.join(__dirname, "../circuits", "build/authV2"),
                recompile: true,
                reduceConstraints: false,
            },
        );
    });

    tests.forEach(({desc, inputs, expOut}) => {
        it(`auth ${desc}`, async function() {
            const w = await circuit.calculateWitness(inputs, true);
            await circuit.checkConstraints(w);
            await circuit.assertOut(w, expOut);
        });
    });
});
